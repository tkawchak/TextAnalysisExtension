variables:
  - name: NPM_VERSIONSPEC
    value: '10.x'
  - name: VM_IMAGE
    value: 'ubuntu-16.04' # examples of other options: 'macOS-10.13', 'vs2017-win2016'
  - name: AZURE_SUBSCRIPTION
    value: "Visual Studio Enterprise (dfb55888-9a13-4ea3-b705-ddf6b0801b05)"
  - name: ProcessTextFunctionArtifactName
    value: 'ProcessTextFunc'
  - name: ProcessTextFunctionAppName
    value: 'ProcessTextFunc'
  - name: ProcessTextFunctionName
    value: 'ProcessTextHttp'
  - name: ProcessTextFunctionPath
    value: 'ProcessText/$(ProcessTextFunctionAppName)'
  - name: AzureFunctionPath
    value: 'ProcessText'
  - name: BrowserExtensionPath
    value: 'BrowserExtension'

trigger:
  batch: 'true'
  branches:
    include:
    - master
    - develop

pr:
  autoCancel: 'true'
  branches:
    include:
    - master

stages:

  # Stage to build the Web Extension
  - stage: BuildWebExtension
    displayName: Build Web Extension
    dependsOn: []
    jobs:
    - job: BuildNpm
      displayName: "Build Project with Npm"
      dependsOn: []
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - task: NodeTool@0
        displayName: "Download Node"
        inputs:
          versionSpec: $(NPM_VERSIONSPEC)
      - task: Npm@1
        displayName: "Npm Install"
        inputs:
          command: 'install'
          workingDir: $(BrowserExtensionPath)
      - task: Npm@1
        displayName: "Package Files with Npm"
        inputs:
          command: 'custom'
          workingDir: $(BrowserExtensionPath)
          customCommand: 'run package'
    - job: TestNpm
      displayName: "Unit Test Npm Project"
      dependsOn: BuildNpm
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - task: NodeTool@0
        displayName: "Download Node"
        inputs:
          versionSpec: $(NPM_VERSIONSPEC)
      - task: Npm@1
        displayName: "Npm Test"
        inputs:
          command: 'custom'
          workingDir: $(BrowserExtensionPath)
          customCommand: 'run test'
    
    # Stage to build azure function projects
  - stage:  BuildFunctionProjects
    displayName: "Build Azure Function Projects"
    dependsOn: []
    jobs:
    - job: BuildAzureFunction
      displayName: "Build Azure Function Projects"
      dependsOn: []
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - task: DotNetCoreCLI@2
        displayName: "Build Azure Functions with Dotnet"
        inputs:
          command: 'build'
          projects: '$(AzureFunctionPath)/**/*.csproj'
          feedsToUse: 'select'
          versioningScheme: 'off'
    - job: TestAzureFunctions
      displayName: "Unit Test Azure Function Projects"
      dependsOn: BuildAzureFunction
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - task: DotNetCoreCLI@2
        displayName: "Unit Test Azure Functions with Dotnet"
        inputs:
          command: 'test'
          projects: '$(AzureFunctionPath)/**/*.Tests.csproj'
          testRunTitle: 'Azure Function Tests'
          feedsToUse: 'select'
          versioningScheme: 'off'
          nobuild: true

  # Prepare Azure Function code for Deployment and publish artifacts
  - stage: PrepareArtifacts
    displayName: "Azure Function Artifacts"
    dependsOn: BuildFunctionProjects
    jobs:
    - job: BuildAzureFunction
      pool:
        vmImage: $(VM_IMAGE)
      steps:
      - task: DotNetCoreCLI@2
        displayName: Publish Azure Function With Dotnet
        inputs:
          command: 'publish'
          projects: '$(ProcessTextFunctionPath)/*.csproj'
          arguments: '--output $(build.ArtifactStagingDirectory)/$(ProcessTextFunctionArtifactName)/$(Build.BuildId).zip --configuration Release'
          zipAfterPublish: true
          publishWebProjects: false
      - task: PublishBuildArtifacts@1
        displayName: Publish Azure Function Artifacts
        inputs:
          ArtifactName: $(ProcessTextFunctionArtifactName)
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(ProcessTextFunctionArtifactName)/$(Build.BuildId).zip'